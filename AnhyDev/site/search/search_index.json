{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome-to-the-anhydev-documentation-site","title":"Welcome to the AnhyDev Documentation Site!","text":"<p>This site contains detailed documentation for all products developed by the AnhyDev team. We specialize in creating high-quality plugins for Minecraft servers and other useful tools for players and administrators.</p> <p>Here, you will find a comprehensive description of the functionality of our plugins, step-by-step setup instructions, usage examples, and important technical details to help you make the most out of our products.</p> <p>The site is organized so that you can easily find the necessary information about each product, from configuration settings to in-game commands and even integrations with other services.</p> <p>AnhyDev is committed to providing you with the best tools for your Minecraft server, and we hope this documentation will serve as a reliable guide to our products.</p> <p>Thank you for your trust, and we wish you success in working with our products!</p>"},{"location":"anhyfamily/","title":"Plugin Documentation","text":"<p>The Minecraft server plugin AnhyFamily is definitely worth your attention. It significantly enhances social interaction in Minecraft by adding new features to the gameplay. Its versatility, customization options, and interactivity make AnhyFamily attractive to both players and server administrators.</p>"},{"location":"anhyfamily/#advantages","title":"Advantages:","text":"<ul> <li>Excellent Social Features: Creating families, getting married, adopting, and other social functions make the game more engaging and realistic.</li> <li>Flexible Customization: The ability to customize names, surnames, gender options, and family prefixes gives players the freedom to create unique family units.</li> <li>Convenient Interaction Tools: Family chat, home, chest, and hugs make communication and cooperation between family members easier.</li> <li>Interactive Commands: Interactive commands and messages make the plugin intuitive and easy to use.</li> </ul> <p>Given all these features, AnhyFamily is an excellent addition to any Minecraft server looking to add depth and realism to player social interactions.</p>"},{"location":"anhyfamily/#dependencies","title":"Dependencies:","text":"<p>For the correct and full functionality of the AnhyFamily plugin, the following dependencies are required:</p> <ul> <li>Mandatory: The plugin requires the AnhyLibAPI plugin to be installed. You can download it here.</li> <li>Optional: For virtual currency payments, the Vault plugin is needed.</li> <li>Optional: To utilize placeholders, the PlaceholderAPI plugin is required, along with the Expansion-anhy extension. The extension can be downloaded here and should be placed in the <code>expansions</code> folder within the PlaceholderAPI plugin directory.</li> </ul>"},{"location":"anhyfamily/#main-plugin-features","title":"Main Plugin Features:","text":"<ol> <li> <p>Commands and Management:</p> <ul> <li>The plugin includes various commands for setting up and managing family interactions, including gender changes, name and surname settings, and administrative commands for moderating family ties.</li> </ul> </li> <li> <p>Player Gender:</p> <ul> <li>Players can choose their gender, including a non-binary option. This information is used for prefix settings, family relations, and other game aspects.</li> </ul> </li> <li> <p>Name and Surname:</p> <ul> <li>Players can set their name and surname, which are displayed in the profile and family tree. Names and surnames have certain length and character limitations.</li> </ul> </li> <li> <p>Marriage:</p> <ul> <li>The plugin supports both public and private marriage ceremonies with the option to set gender restrictions. After marriage, a family object is created, including shared information and resources.</li> </ul> </li> <li> <p>Adoption:</p> <ul> <li>Players can adopt other players, creating new family bonds. Adoption can involve players with existing families or those without a family.</li> </ul> </li> <li> <p>Severing Family Relationships:</p> <ul> <li>The plugin allows breaking family relationships through commands, including divorce and separation from individual family members.</li> </ul> </li> <li> <p>Info Block:</p> <ul> <li>Players can view profiles of other players and their family trees. The information is presented interactively, with the ability to navigate to details of each family member.</li> </ul> </li> <li> <p>Family Prefix:</p> <ul> <li>Families can have a unique prefix used in family chat and other interactions. The prefix can be changed once to a custom variant.</li> </ul> </li> <li> <p>Family Chat:</p> <ul> <li>The plugin provides a private chat for families, with access configurable for individual family members. Commands for managing access and sending messages in chat are available for spouses.</li> </ul> </li> <li> <p>Family Home:</p> <ul> <li>The family home is a location where family members can teleport. The home point can be set and changed with certain limitations.</li> </ul> </li> <li> <p>Family Chest:</p> <ul> <li>The family chest is a virtual chest for shared storage. Access to the chest can be configured, and it can be opened either by command or click.</li> </ul> </li> <li> <p>Payment in Virtual Currency:</p> <ul> <li>The plugin allows paying for services in virtual currency using the Vault plugin. Service costs and payments are configured through the configuration file.</li> </ul> </li> <li> <p>Payment in Items:</p> <ul> <li>The plugin supports paying for services with items. Players can add, modify, or remove items for payment using administrative commands.</li> </ul> </li> <li> <p>Payment in Cryptocurrency:</p> <ul> <li>The functionality for payment in cryptocurrency is not yet implemented, but a unique plugin is in development that will enable payments and value exchange using real cryptocurrency.</li> </ul> </li> <li> <p>Hugs:</p> <ul> <li>The plugin allows hugging other players with the appropriate permissions. Access to hugs can be configured for both family members and other players.</li> </ul> </li> <li> <p>Configuration File:</p> <ul> <li>The plugin configuration file allows for setting various aspects, including database, prices, gender parameters, ceremony settings, family home, and chest settings, as well as name and surname restrictions.</li> </ul> </li> <li> <p>Placeholders:</p> <ul> <li>The plugin provides various placeholders for use with PlaceholderAPI, allowing the use of player and family information in different game contexts.</li> </ul> </li> <li> <p>Permissions:</p> <ul> <li>The plugin offers a permissions system for managing access to different features and commands, providing flexibility and control to server administrators.</li> </ul> </li> </ol>"},{"location":"anhyfamily/adopt/","title":"Adoption","text":"<p>In the AnhyFamily plugin, players can adopt other players. By default, only a male and female couple can adopt, but this can be changed in the configuration:</p> <pre><code># Allow adoption for non-binary and undefined genders\nnon_binary_adoption: false\n</code></pre>"},{"location":"anhyfamily/adopt/#adoption-requirements","title":"Adoption Requirements","text":"<ol> <li>Adopters: Adoption can be initiated by a pair of players who do not necessarily have to be a married couple. These can be players with their own families or those who are not married at all. There are no restrictions on the marital status of the adopters.</li> <li>Family Ties: Adoption is not possible if there are already family ties (such as ancestors or descendants) between any of the adopters and the child.</li> <li>Adoption Fee: If specified in the configuration, a fee may be charged for adoption.</li> </ol> <pre><code>prices:\n  # Virtual money, items, cryptocurrency (not yet implemented)\n  currency: VIRTUAL\n  marriage: 0\n  divorce: 0\n  adoption: 0\n</code></pre> <p>The adoption fee is deducted from the player when they propose adoption using the command <code>/adoption invite &lt;PlayerName&gt;</code>. If there are insufficient funds, the adoption proposal will not be sent. If the adoption does not proceed, such as if the prospective adoptee declines, the fee is not refunded.</p>"},{"location":"anhyfamily/adopt/#adoption-process","title":"Adoption Process","text":"<ol> <li> <p>Adoption Invitation: Both future parents must execute the command:    <code>/adoption invite `&lt;PlayerName&gt;`</code>    where <code>&lt;PlayerName&gt;</code> is the player being adopted. The adoptee receives a message with a prompt to accept or decline.</p> </li> <li> <p>Acceptance or Decline: The prospective adoptee can accept or decline the adoption using the commands:    <code>/adoption accept</code>    or    <code>/adoption decline</code></p> </li> <li> <p>Canceling the Proposal: If one of the adopters wants to withdraw their proposal, they can use the command:    <code>/adoption cancel</code></p> </li> <li> <p>Finalizing the Adoption: The adoption will only be completed after both parents send the proposal and the adoptee accepts it.</p> </li> </ol>"},{"location":"anhyfamily/adopt/#forced-adoption","title":"Forced Adoption","text":"<p>Forced adoption is available through the console or to players with administrative rights. In this case, adoption is done by a single player rather than a pair.</p> <ul> <li>Command: <code>/anhyfam forceadopt `&lt;adoptedPlayer&gt;` `&lt;adopterPlayer&gt;`</code>   where <code>adoptedPlayer</code> is the player being adopted, and <code>adopterPlayer</code> is the adopter. Forced adoption is only possible if the child does not already have parents or does not have a father or mother.</li> </ul>"},{"location":"anhyfamily/adopt/#after-adoption","title":"After Adoption","text":"<ul> <li>If the parents or the child have their own families, they will be added to each other's family objects.</li> <li>Information about the new family will be saved in the corresponding family objects, including access to the family chat, home, and chest.</li> </ul>"},{"location":"anhyfamily/chat/","title":"Family Chat","text":"<p>The family chat in the AnhyFamily plugin allows the couple and family members with appropriate permissions to communicate with each other. The commands for managing access and using the family chat are only available to the couple.</p>"},{"location":"anhyfamily/chat/#commands-for-managing-access","title":"Commands for Managing Access","text":"<ol> <li> <p>/fchat access <code>&lt;PlayerName&gt;</code> <code>&lt;allow|deny|default&gt;</code>    Sets personal access for a family member. You can allow, deny, or set default access. It is not possible to grant access to a player who is not a family member (i.e., not a parent or child of either spouse).</p> </li> <li> <p>/fchat default <code>&lt;children|parents&gt;</code> <code>&lt;allow|deny&gt;</code>    Sets group access for all children or parents. Personal permissions take priority over group permissions. For example, if children are denied access to the chat, but one child is given personal permission, that child will have access.</p> </li> <li> <p>/fchat check <code>&lt;PlayerName&gt;</code>    Checks whether the specified player has access to the family chat. Both personal and group access are considered.</p> </li> <li> <p>/fchat defaultcheck <code>&lt;children|parents&gt;</code>    Checks the access permission for the group of children or parents to the family chat.</p> </li> </ol> <p>All responses to these commands are interactive messages with clickable elements that allow you to change settings without entering commands.</p>"},{"location":"anhyfamily/chat/#using-the-family-chat","title":"Using the Family Chat","text":"<ol> <li> <p>/fchat <code>&lt;message text&gt;</code>    Sends a message to your own family chat. The message is visible to all family members who have access to the chat.</p> </li> <li> <p>/fchat #<code>&lt;PREFIX&gt;</code> <code>&lt;message text&gt;</code>    Sends a message to a family chat by prefix. <code>&lt;PREFIX&gt;</code> is the unique prefix of the family whose chat the message is being sent to. A player can only send messages to family chats they have access to.</p> </li> <li> <p>/fchat @<code>&lt;PlayerName&gt;</code> <code>&lt;message text&gt;</code>    Sends a message to a family chat by player nickname. <code>&lt;PlayerName&gt;</code> is the player whose family chat the message is being sent to. This is an alternative to using a prefix.</p> </li> <li> <p>/fchat <code>&lt;message text&gt;</code> @<code>&lt;PlayerName&gt;</code>    Tags a player in the family chat. The player <code>&lt;PlayerName&gt;</code> will receive an audio and visual notification that they have been tagged.</p> </li> </ol>"},{"location":"anhyfamily/chat/#interactive-elements","title":"Interactive Elements","text":"<p>All elements of messages in the family chat, except the message text itself, are interactive. This allows certain commands and other actions to be inserted into the command line with simple clicks on these elements.</p>"},{"location":"anhyfamily/chat/#default-access","title":"Default Access","text":"<p>The couple has access to their own family chat by default, and this access cannot be revoked. This ensures a constant communication channel between the couple, regardless of other access settings for family members.</p>"},{"location":"anhyfamily/chest/","title":"Family Chest","text":"<p>The family chest is a virtual chest with 54 slots where the family and its members can store items and have shared access. Family members include the parents and children of the couple. Only one player can use the chest at a time; another player will gain access only after the first player closes the chest.</p>"},{"location":"anhyfamily/chest/#commands-for-setting-and-permissions","title":"Commands for Setting and Permissions","text":"<ol> <li> <p>/fchest set    Sets the chest at the coordinates of the block the player is looking at. Only certain blocks specified in the configuration can be used as the family chest. The other spouse will receive an interactive message to confirm or refuse the chest setup.</p> </li> <li> <p>/fchest accept    Confirm the chest setup.</p> </li> <li> <p>/fchest refuse    Refuse the chest setup.</p> </li> </ol> <p>It's important to note that the family chest block cannot be destroyed. To break the chest block, you must first move the chest to another block at different coordinates by using the <code>/fchest set</code> command at the new location.</p>"},{"location":"anhyfamily/chest/#personal-and-group-permissions","title":"Personal and Group Permissions","text":"<p>Commands for managing access to the family chest are similar to those for the family chat and home:</p> <ol> <li> <p>/fchest access <code>&lt;PlayerName&gt;</code> <code>&lt;allow|deny|default&gt;</code>    Sets personal access for a family member. You can allow, deny, or set default access. It is not possible to grant access to a player who is not a family member (i.e., not a parent or child of either spouse).</p> </li> <li> <p>/fchest default <code>&lt;children|parents&gt;</code> <code>&lt;allow|deny&gt;</code>    Sets group access for all children or parents. Personal permissions take priority over group permissions. For example, if children are denied access to the chest, but one child is given personal permission, that child will have access.</p> </li> <li> <p>/fchest check <code>&lt;PlayerName&gt;</code>    Checks whether the specified player has access to the family chest. Both personal and group access are considered.</p> </li> <li> <p>/fchest defaultcheck <code>&lt;children|parents&gt;</code>    Checks the access permission for the group of children or parents to the family chest.</p> </li> </ol> <p>All responses to these commands are interactive messages with clickable elements that allow you to change settings without entering commands.</p>"},{"location":"anhyfamily/chest/#using-the-family-chest","title":"Using the Family Chest","text":"<ol> <li> <p>/fchest    Opens the family chest. This command can be executed by the couple and family members who have permission.</p> </li> <li> <p>/fchest #<code>&lt;PREFIX&gt;</code>    Opens the family chest by prefix. <code>&lt;PREFIX&gt;</code> is the unique prefix of the family whose chest is being accessed.</p> </li> <li> <p>/fchest @<code>&lt;PlayerName&gt;</code>    Opens the family chest by player nickname. <code>&lt;PlayerName&gt;</code> is the player whose family chest is being accessed.</p> </li> <li> <p>Clicking on the Block    The family chest can also be opened by clicking on it if this is not disabled in the configuration.</p> </li> </ol>"},{"location":"anhyfamily/chest/#configuration-settings","title":"Configuration Settings","text":"<p>In the plugin configuration, you can set up how the chest is opened, the interaction distance, and world limitations:</p> <pre><code># Using the family chest\nchest:\n  # Allow the command (/fchest) to open the chest\n  command: true\n  # Distance for the command (0 - no limit)\n  distance: 0\n  # If unlimited, then only in this world\n  world: false\n  # Allow opening the chest by clicking\n  click: true\n  # List of blocks in \"Material\" format that can be used as a chest\n  material:\n    - CHEST\n    - BARREL\n  # Distance from the chest to the home point for setting and interaction\n  distance_to_home: 20\n</code></pre> <p>This configuration allows you to customize how the family chest works, including the blocks that can be used, the distance restrictions, and how players can interact with the chest.</p>"},{"location":"anhyfamily/commands/","title":"Commands","text":"<p>The AnhyFamily plugin allows players to create and manage families in Minecraft, offering a wide range of features and capabilities. Below is a list of the main commands available in the plugin and a brief description of their purpose.</p>"},{"location":"anhyfamily/commands/#administrator-commands","title":"Administrator Commands","text":"<ul> <li>/anhyfam (aliases: /anhyfamily, /afam)   Commands available for use from the console or by players with administrative rights.</li> </ul>"},{"location":"anhyfamily/commands/#player-commands","title":"Player Commands","text":"<ul> <li> <p>/gender (aliases: /identity, /gen)   Commands for changing or setting the player's gender.</p> </li> <li> <p>/family (aliases: /fam)   A set of commands for configuring the player's profile, interacting with the family, and retrieving family information.</p> </li> <li> <p>/marry (aliases: /married)   Commands for marrying players.</p> </li> <li> <p>/adoption (aliases: /adopt)   Commands for adoption.</p> </li> <li> <p>/fhome (aliases: /familyhome, /fh)   Commands for working with family home points.</p> </li> <li> <p>/fchat (aliases: /familychat, /fc)   Commands for managing family chats.</p> </li> <li> <p>/fchest (aliases: /familychest, /ft)   Commands for managing family chests.</p> </li> <li> <p>/fhugs (aliases: /familyhugs, /hugs)   Commands for setting hug permissions and other actions related to hugging.</p> </li> <li> <p>/fprefix (aliases: /familyprefix, /prefix)   Commands for managing family prefixes.</p> </li> </ul>"},{"location":"anhyfamily/config/","title":"Configuration File","text":"<p>The configuration file for the AnhyFamily plugin allows you to customize various aspects of the plugin, from database settings to family features. Below is a detailed description of each configuration parameter.</p>"},{"location":"anhyfamily/config/#basic-settings","title":"Basic Settings","text":"<ul> <li>language: The default language that will be used if a translation is not found in the desired language.</li> </ul> <pre><code>  language: en\n</code></pre> <ul> <li>plugin_name: The name of the plugin that will be displayed to users in the chat.</li> </ul> <pre><code>  plugin_name: AnhyFamily\n</code></pre>"},{"location":"anhyfamily/config/#database-settings","title":"Database Settings","text":"<ul> <li>database: Settings for connecting to the database. Possible database types: 'SQLite' or 'MySQL'.</li> </ul> <pre><code>  database:\n    type: 'SQLite'\n    mysql:\n      host: 'db4free.net'\n      port: 3306\n      database: 'anhyfamily'\n      username: 'anhydev'\n      password: 'HE5rYZb2hygDf4FW'\n      prefix: 'anhy_'\n      useSSL: false\n      autoReconnect: true\n</code></pre>"},{"location":"anhyfamily/config/#pricing-settings","title":"Pricing Settings","text":"<ul> <li>prices: Settings for currency and pricing for various actions in the plugin.</li> </ul> <pre><code>  prices:\n    currency: VIRTUAL\n    marriage: 0\n    divorce: 0\n    adoption: 0\n</code></pre>"},{"location":"anhyfamily/config/#gender-settings","title":"Gender Settings","text":"<ul> <li>gender: Settings that allow the selection of a non-binary gender and the corresponding rights for adoption and marriage.</li> </ul> <pre><code>  gender:\n    non_binary: false\n    non_binary_adoption: false\n    non_binary_marriage: false\n</code></pre>"},{"location":"anhyfamily/config/#ceremony-settings","title":"Ceremony Settings","text":"<ul> <li>ceremonyRadius: The maximum distance from the priest to the couple. If 0, there are no limits.</li> </ul> <pre><code>  ceremonyRadius: 20\n</code></pre> <ul> <li>ceremonyHearingRadius: The radius within which the marriage announcements will be visible in the chat. If 0, all online players will see it.</li> </ul> <pre><code>  ceremonyHearingRadius: 200\n</code></pre> <ul> <li>marriedSymbol: The symbol used to denote married players.</li> </ul> <pre><code>  marriedSymbol: \"\u26ad\"\n</code></pre>"},{"location":"anhyfamily/config/#private-ceremony-settings","title":"Private Ceremony Settings","text":"<ul> <li>privateCeremony: The location for holding a private marriage ceremony.</li> </ul> <pre><code>  privateCeremony:\n    world: \"world\"\n    x: 100\n    y: 64\n    z: -200\n</code></pre>"},{"location":"anhyfamily/config/#family-home-settings","title":"Family Home Settings","text":"<ul> <li>home: Settings for the family home.</li> </ul> <pre><code>  home:\n    timeout: 1440\n    world: false\n</code></pre>"},{"location":"anhyfamily/config/#family-chest-settings","title":"Family Chest Settings","text":"<ul> <li>chest: Settings for the family chest.</li> </ul> <pre><code>  chest:\n    command: true\n    distance: 0\n    world: false\n    click: true\n    material:\n      - CHEST\n      - BARREL\n    distance_to_home: 20\n</code></pre>"},{"location":"anhyfamily/config/#name-and-surname-restrictions","title":"Name and Surname Restrictions","text":"<ul> <li>languages_limitation: Settings that restrict names and surnames using regular expressions.</li> </ul> <pre><code>  languages_limitation: \"^(?!.*[-']{2})(?!.*--)(?!.*'')\\\\p{L}['-]*[\\\\p{L}]+$\"\n</code></pre>"},{"location":"anhyfamily/config/#configuration-file-example","title":"Configuration File Example","text":"<pre><code>#\n# \u2591\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2588\u2557\u2591\u2591\u2588\u2588\u2557\u2588\u2588\u2557\u2591\u2591\u2588\u2588\u2557\u2588\u2588\u2557\u2591\u2591\u2591\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2588\u2557\u2591\u2591\u2591\u2588\u2588\u2588\u2557\u2588\u2588\u2557\u2588\u2588\u2557\u2591\u2591\u2588\u2588\u2557\u2591\u2591\u2591\u2588\u2588\u2557\n# \u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2551\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2551\u255a\u2588\u2588\u2557\u2591\u2588\u2588\u2554\u255d\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2557\u2591\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2551\u2588\u2588\u2551\u2591\u2591\u255a\u2588\u2588\u2557\u2591\u2588\u2588\u2554\u255d\n# \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2588\u2588\u2557\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2591\u255a\u2588\u2588\u2588\u2588\u2554\u255d\u2591\u2588\u2588\u2588\u2588\u2588\u2557\u2591\u2591\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2588\u2588\u2588\u2588\u2554\u2588\u2588\u2551\u2588\u2588\u2551\u2588\u2588\u2551\u2591\u2591\u2591\u255a\u2588\u2588\u2588\u2588\u2554\u255d\u2591\n# \u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2551\u255a\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\u2591\u2591\u255a\u2588\u2588\u2554\u255d\u2591\u2591\u2588\u2588\u2554\u2550\u2550\u255d\u2591\u2591\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2551\u255a\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2588\u2588\u2551\u2588\u2588\u2551\u2591\u2591\u2591\u2591\u255a\u2588\u2588\u2554\u255d\u2591\u2591\n# \u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2551\u2588\u2588\u2551\u2591\u255a\u2588\u2588\u2588\u2551\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2551\u2591\u2591\u2591\u2588\u2588\u2551\u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2551\u2591\u2591\u2588\u2588\u2551\u2588\u2588\u2551\u2591\u255a\u2550\u255d\u2591\u2588\u2588\u2551\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2551\u2591\u2591\u2591\n# \u255a\u2550\u255d\u2591\u2591\u255a\u2550\u255d\u255a\u2550\u255d\u2591\u2591\u255a\u2550\u2550\u255d\u255a\u2550\u255d\u2591\u2591\u255a\u2550\u255d\u2591\u2591\u2591\u255a\u2550\u255d\u2591\u2591\u2591\u255a\u2550\u255d\u2591\u2591\u2591\u2591\u2591\u255a\u2550\u255d\u2591\u2591\u255a\u2550\u255d\u255a\u2550\u255d\u2591\u2591\u2591\u2591\u2591\u255a\u2550\u255d\u255a\u2550\u255d\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\u255a\u2550\u255d\u2591\u2591\u2591\n#\nlanguage: en\nplugin_name: AnhyFamily\n\ndatabase:\n  type: 'SQLite'\n  mysql:\n    host: 'db4free.net'\n    port: 3306\n    database: 'anhyfamily'\n    username: 'anhydev'\n    password: 'HE5rYZb2hygDf4FW'\n    prefix: 'anhy_'\n    useSSL: false\n    autoReconnect: true\n\nprices:\n  currency: VIRTUAL\n  marriage: 0\n  divorce: 0\n  adoption: 0\n\ngender:\n  non_binary: false\n  non_binary_adoption: false\n  non_binary_marriage: false\n\nceremonyRadius: 20\nceremonyHearingRadius: 200\nmarriedSymbol: \"\u26ad\"\n\nprivateCeremony:\n  world: \"world\"\n  x: 100\n  y: 64\n  z: -200\n\nhome:\n  timeout: 1440\n  world: false\n\nchest:\n  command: true\n  distance: 0\n  world: false\n  click: true\n  material:\n    - CHEST\n    - BARREL\n  distance_to_home: 20\n\nlanguages_limitation: \"^(?!.*[-']{2})(?!.*--)(?!.*'')\\\\p{L}['-]*[\\\\p{L}]+$\"\n</code></pre> <p>This configuration file allows you to set up the AnhyFamily plugin according to your needs, providing flexible control over the database, pricing, gender parameters, ceremonies, family locations, and restrictions on names and surnames.</p>"},{"location":"anhyfamily/crypto/","title":"Payment in Cryptocurrency","text":"<p>Payment for events such as marriage, adoption, or divorce using cryptocurrency is a feature that is not yet implemented in the AnhyFamily plugin. However, active development is underway for a unique plugin that will enable payments, exchanges, and sales of assets using real cryptocurrency. This new plugin will allow the integration of cryptocurrency transactions directly on your Minecraft server, making the gameplay even more engaging and modern.</p>"},{"location":"anhyfamily/crypto/#upcoming-features","title":"Upcoming Features","text":"<ol> <li> <p>Support for Various Cryptocurrencies: The plugin is expected to support the most popular cryptocurrencies, such as Bitcoin, Ethereum, and others. This will allow players to make transactions in the cryptocurrency that is most convenient for them.</p> </li> <li> <p>Secure Transactions: The new plugin will ensure a high level of security for all transactions, utilizing advanced encryption and blockchain technologies. This guarantees that all operations will be protected from fraud and unauthorized access.</p> </li> <li> <p>Automated Payments: All processes for paying for events, exchanging, and selling assets will be automated, allowing players to focus on gameplay without worrying about the technical aspects of transactions.</p> </li> <li> <p>User-Friendly Interface: The plugin will feature a simple and intuitive interface for configuration and use. Players will easily manage their cryptocurrency accounts and perform necessary operations.</p> </li> <li> <p>Flexible Configuration: Server administrators will have the ability to configure the plugin according to the needs of their community, including setting transaction fees, limits on minimum and maximum amounts, and much more.</p> </li> </ol>"},{"location":"anhyfamily/crypto/#conclusion","title":"Conclusion","text":"<p>The planned integration of cryptocurrency payments into the AnhyFamily plugin opens up new possibilities for players and server administrators. It will make the gameplay more interactive and modern, allowing players to use their cryptocurrency assets directly in the game. Stay tuned for updates to keep abreast of the latest developments regarding this innovative feature!</p>"},{"location":"anhyfamily/gender/","title":"Player Gender","text":"<p>The AnhyFamily plugin allows players to set and manage their gender, which enhances integration into family relationships and interactions within the game. Below are the details on choosing and using gender in the plugin.</p>"},{"location":"anhyfamily/gender/#commands-for-setting-gender","title":"Commands for Setting Gender","text":"<ul> <li>/gender (aliases: /identity, /gen)   The primary command for managing the player's gender.</li> </ul>"},{"location":"anhyfamily/gender/#subcommands","title":"Subcommands:","text":"<ul> <li> <p>/gender info   Displays the current gender of the player who executed the command. If a player\u2019s nickname is added, it shows the gender of the specified player.</p> </li> <li> <p>/gender set [male|female|non_binary]   Sets the corresponding gender for the player. Male and female genders are available by default, while the non-binary gender is only available if allowed in the plugin configuration.</p> </li> </ul>"},{"location":"anhyfamily/gender/#impact-of-gender","title":"Impact of Gender","text":"<p>A player's gender helps with identification and adds depth to the gameplay. Using placeholders that provide both the gender symbol and its name, you can customize chat prefixes.</p> <p>Additionally, by default, marriages are only allowed between a male and a female, and similarly, adoption is typically only allowed for male-female couples. These restrictions can be lifted by modifying the plugin configuration to allow marriages and adoptions between players of any gender, including same-sex, non-binary, and undefined.</p>"},{"location":"anhyfamily/gender/#configuration-example","title":"Configuration Example","text":"<pre><code>gender:\n  # Allow the selection of a non-binary gender\n  non_binary: false\n  # Allow adoption for non-binary and undefined genders\n  non_binary_adoption: false\n  # Allow marriages for non-binary and undefined genders\n  non_binary_marriage: false\n</code></pre>"},{"location":"anhyfamily/gender/#administrative-commands","title":"Administrative Commands","text":"<ul> <li> <p>/anhyfam forcegender <code>&lt;PlayerName&gt;</code> <code>&lt;gender&gt;</code>   Forces a gender change for the player. This command is only available from the console.</p> </li> <li> <p>/anhyfam genderreset <code>&lt;PlayerName&gt;</code>   Resets the player's gender to \"undefined.\" This command is only available from the console.</p> </li> </ul>"},{"location":"anhyfamily/gender/#integration-with-other-plugins","title":"Integration with Other Plugins","text":"<p>Player gender can be used in other plugins via API or placeholders, expanding its application possibilities. This allows for an even more interactive and dynamic gaming experience.</p>"},{"location":"anhyfamily/home/","title":"Family Home","text":"<p>The family home in the AnhyFamily plugin is a location that the married couple and family members with the appropriate permissions can teleport to. Family members include the parents and children of the couple.</p>"},{"location":"anhyfamily/home/#commands-for-setting-and-permissions","title":"Commands for Setting and Permissions","text":"<ol> <li> <p>/fhome set    Sets the home point at the coordinates of the player who executes the command. The other spouse will receive an interactive message to either confirm or decline the home point setting.</p> </li> <li> <p>/fhome accept      Confirm the setting of the home point.</p> </li> <li> <p>/fhome refuse      Refuse the setting of the home point.</p> </li> </ol> <p>The home point can only be changed after a cooldown period specified in the configuration.</p>"},{"location":"anhyfamily/home/#personal-and-group-permissions","title":"Personal and Group Permissions","text":"<p>Commands for managing access to the family home are similar to those for the family chat:</p> <ol> <li> <p>/fhome access <code>&lt;PlayerName&gt;</code> <code>&lt;allow|deny|default&gt;</code>    Sets personal access for a family member. You can allow, deny, or set default access. It is not possible to grant access to a player who is not a family member (i.e., not a parent or child of either spouse).</p> </li> <li> <p>/fhome default <code>&lt;children|parents&gt;</code> <code>&lt;allow|deny&gt;</code>    Sets group access for all children or parents. Personal permissions take priority over group permissions. For example, if children are denied access to the home, but one child is given personal permission, that child will have access.</p> </li> <li> <p>/fhome check <code>&lt;PlayerName&gt;</code>    Checks whether the specified player has access to the family home. Both personal and group access are considered.</p> </li> <li> <p>/fhome defaultcheck <code>&lt;children|parents&gt;</code>    Checks the access permission for the group of children or parents to the family home.</p> </li> </ol> <p>All responses to these commands are interactive messages with clickable elements that allow you to change settings without entering commands.</p>"},{"location":"anhyfamily/home/#teleporting-to-the-family-home","title":"Teleporting to the Family Home","text":"<ol> <li> <p>/fhome    Teleports to the family home. This command can be executed by the couple and family members who have permission.</p> </li> <li> <p>/fhome #<code>&lt;PREFIX&gt;</code>    Teleports to the family home by prefix. <code>&lt;PREFIX&gt;</code> is the unique prefix of the family whose home is being teleported to.</p> </li> <li> <p>/fhome @<code>&lt;PlayerName&gt;</code>    Teleports to the family home by player nickname. <code>&lt;PlayerName&gt;</code> is the player whose family home is being teleported to.</p> </li> </ol>"},{"location":"anhyfamily/home/#configuration-settings","title":"Configuration Settings","text":"<p>In the plugin configuration, you can specify whether teleportation to the family home is only allowed from the world where it is set or from any world, as well as set the timeout before the home point can be changed:</p> <pre><code># Use of the /fhome (/familyhome) command\nhome:\n  # Timeout before changing the family home point, specified in minutes\n  timeout: 1440\n  # Allow teleporting to the family home only in the world where it is set\n  world: false\n</code></pre>"},{"location":"anhyfamily/hugs/","title":"Hugs","text":"<p>The AnhyFamily plugin allows players to hug other players, provided this feature is allowed in the settings. There are both family and personal permissions for hugging, which allow players to customize the hugging feature according to their preferences.</p>"},{"location":"anhyfamily/hugs/#how-to-hug-other-players","title":"How to Hug Other Players","text":"<p>To hug another player, several conditions must be met:</p> <ol> <li>Player Position: The player must be in a specific position, with their head tilted forward, meaning their view should be directed downwards at an angle between 0 and 70 degrees.</li> <li>Player State: The player must be sneaking (crouching).</li> <li>Distance: The distance to the player you want to hug must be less than 2 blocks.</li> <li>Right-Click: You need to right-click on the player you want to hug.</li> </ol> <p>If all these conditions are met, the hug will be successfully executed, provided hugging is allowed by the settings.</p>"},{"location":"anhyfamily/hugs/#family-permissions","title":"Family Permissions","text":"<p>Family permissions are managed through commands similar to those in previous sections:</p> <ol> <li> <p>/fhugs access <code>&lt;PlayerName&gt;</code> <code>&lt;allow|deny|default&gt;</code>    Sets personal access for a family member. You can allow, deny, or set default access.</p> </li> <li> <p>/fhugs default <code>&lt;children|parents&gt;</code> <code>&lt;allow|deny&gt;</code>    Sets group access for all children or parents. Personal permissions take priority over group permissions.</p> </li> <li> <p>/fhugs check <code>&lt;PlayerName&gt;</code>    Checks whether the specified player has access to hugs. Both personal and group access are considered.</p> </li> <li> <p>/fhugs defaultcheck <code>&lt;children|parents&gt;</code>    Checks the hug permission for the group of children or parents.</p> </li> </ol> <p>All responses to these commands are interactive messages with clickable elements that allow you to change settings without entering commands.</p>"},{"location":"anhyfamily/hugs/#personal-permissions","title":"Personal Permissions","text":"<p>The ability to hug is not limited to family members. There are also personal permissions for any player that each player can set or deny:</p> <ol> <li> <p>/fhugs allow <code>&lt;PlayerName&gt;</code>    Allows hugs for a specific player.</p> </li> <li> <p>/fhugs deny <code>&lt;PlayerName&gt;</code>    Denies hugs for a specific player.</p> </li> </ol> <p>Personal permissions and denials have the highest priority, even over family personal permissions. This means you can deny hugs even to a spouse.</p>"},{"location":"anhyfamily/hugs/#global-permissions","title":"Global Permissions","text":"<ol> <li> <p>/fhugs allowall <code>&lt;true|false&gt;</code>    Sets a global permission to allow hugs for all players. If set to <code>true</code>, hugs are allowed for all players, and this has a higher priority than family permissions. When set to <code>true</code>, <code>denyall</code> is automatically set to <code>false</code>.</p> </li> <li> <p>/fhugs denyall <code>&lt;true|false&gt;</code>    Sets a global ban on hugs for all players. If set to <code>true</code>, hugs are denied for all players except those who have personal or family permissions. When set to <code>true</code>, <code>allowall</code> is automatically set to <code>false</code>.</p> </li> </ol>"},{"location":"anhyfamily/hugs/#other-commands","title":"Other Commands","text":"<ol> <li> <p>/fhugs remove <code>&lt;PlayerName&gt;</code>    Removes a player from the personal permissions and denials list.</p> </li> <li> <p>/fhugs list    Shows a list of personal permissions and denials.</p> </li> <li> <p>/fhugs globalstatus    Displays the current status of the global hug permission (allowall, denyall).</p> </li> </ol>"},{"location":"anhyfamily/hugs/#using-the-command-without-arguments","title":"Using the Command Without Arguments","text":"<p>If you execute the /fhugs command without arguments while looking at another player, you will receive a message indicating whether that player has allowed hugs.</p>"},{"location":"anhyfamily/hugs/#consequences-of-a-failed-hug-attempt","title":"Consequences of a Failed Hug Attempt","text":"<p>If a player attempts to hug another player who has not allowed it, they will receive minor damage and be knocked back a few blocks, simulating a slap.</p>"},{"location":"anhyfamily/hugs/#example-command-usage","title":"Example Command Usage","text":"<ul> <li> <p>Allow hugs for a specific player: <code>/fhugs allow &lt;PlayerName&gt;</code></p> </li> <li> <p>Deny hugs for a specific player: <code>/fhugs deny &lt;PlayerName&gt;</code></p> </li> <li> <p>Set a global hug permission for everyone: <code>/fhugs allowall true</code></p> </li> <li> <p>Set a global hug ban for everyone: <code>/fhugs denyall true</code></p> </li> <li> <p>Check the global hug permission status: <code>/fhugs globalstatus</code></p> </li> <li> <p>Check if hugs are allowed while looking at another player: <code>/fhugs</code></p> </li> </ul>"},{"location":"anhyfamily/info/","title":"Info Block","text":"<p>The /family info command provides detailed information about a player and their family. This command displays an interactive message where you can choose to view either the player's profile or their family tree. By hovering over the respective option, you'll see the desired information in a tooltip, and by clicking on it, the information will be printed in the chat as a message for the player.</p>"},{"location":"anhyfamily/info/#using-the-command","title":"Using the Command","text":"<ul> <li>/family info   If the command is executed without additional parameters, information about the player who executed the command will be displayed.</li> </ul> <pre><code>/family info &lt;PlayerName&gt;\n</code></pre> <p>Add a player's nickname to get information about the specified player.</p>"},{"location":"anhyfamily/info/#player-profile","title":"Player Profile","text":"<p>The /family profile command (or selecting the corresponding option from the /family info command) displays detailed information about the player, including their gender, name, surname, and information about close relatives: spouse, parents, and children.</p> <p>Example of an interactive profile:</p> <pre><code>=========================================\n (\u2642) Korvin Ambersky (Korvinius)\n-----------------------------------------\n Partner: None \n Father: Unknown \n Mother: (\u2640) Dara Chaos (Dara)\n Children: \n  Son: (\u2642) Nacio Armarius (NaZZyyOO)\n  Daughter: (\u2640) Lyra Ambersky (Lyra)\n=========================================\n</code></pre> <p>Clicking on any player listed in the profile will bring up the relevant information about that player.</p>"},{"location":"anhyfamily/info/#family-tree","title":"Family Tree","text":"<p>The /family tree command (or selecting the corresponding option from the /family info command) displays the player's family tree, including ancestors and descendants. The family tree is also interactive: clicking on anyone listed in the family tree will display that player's family tree.</p> <p>Example of a family tree:</p> <pre><code>   \u250c\u2500 (\u2640) Lyra Ambersky (Lyra)\n     \u250c\u2500 (?) (Redgit)\n   \u250c\u2500 (\u2642) Nacio Armarius (NaZZyyOO)\n \u250c\u2500 Descendants \n  Family Tree (\u2642) Korvin Ambersky (Korvinius)\n \u2514\u2500 Ancestors \n   \u2514\u2500 (\u2640) Dara Chaos (Dara)\n</code></pre>"},{"location":"anhyfamily/info/#command-usage","title":"Command Usage","text":"<ul> <li>/family profile   Displays the player's profile information. You can add a nickname to get information about another player:</li> </ul> <pre><code>  /family profile &lt;PlayerName&gt;\n</code></pre> <ul> <li>/family tree   Displays the player's family tree. You can add a nickname to get information about another player's family tree:</li> </ul> <pre><code>  /family tree &lt;PlayerName&gt;\n</code></pre>"},{"location":"anhyfamily/items/","title":"Payment in Items","text":"<p>The AnhyFamily plugin allows using items as a payment method for events such as marriage, adoption, or divorce. This functionality becomes available if the following option is selected in the plugin's configuration file:</p> <pre><code>prices:\n  # VIRTUAL, ITEM, CRYPTO(not yet implemented)\n  currency: ITEM\n</code></pre> <p>When this option is set, the plugin will look for information about the cost of services in items. The item prices are stored in the <code>item_prices.yml</code> file within the plugin folder. This file is loaded into memory when the server starts. If the file is missing, the item cost defaults to zero, meaning the services are provided for free. Similarly, if there is no entry for a specific service in the file, that service is also considered free. Only those services with a corresponding entry in the file will have the specified item cost.</p>"},{"location":"anhyfamily/items/#commands-for-managing-item-prices","title":"Commands for Managing Item Prices","text":"<p>A player with administrative permissions can add, modify, or remove items as service prices using the following commands:</p> <ul> <li> <p>/anhyfam item add <code>&lt;key&gt;</code>   Adds or changes the item used for service payments, where <code>&lt;key&gt;</code> corresponds to a specific event (e.g., <code>marriage</code>, <code>divorce</code>, <code>adoption</code>). The player must hold the item in hand when executing the command.</p> </li> <li> <p>/anhyfam item clear   Clears the <code>item_prices.yml</code> file, removing all entries for service item prices.</p> </li> <li> <p>/anhyfam item get <code>&lt;key&gt;</code>   Retrieves the item corresponding to the specified key into the player's inventory or drops it if the inventory is full.</p> </li> <li> <p>/anhyfam item remove <code>&lt;key&gt;</code>   Removes the item corresponding to the specified key from the <code>item_prices.yml</code> file.</p> </li> </ul>"},{"location":"anhyfamily/items/#examples-of-command-usage","title":"Examples of Command Usage","text":"<ol> <li>Adding or Modifying an Item</li> </ol> <p>An administrator holds the item in hand and executes the command:    <code>/anhyfam item add marriage</code>    After successfully executing the command, the item will be added or updated for the <code>marriage</code> key.</p> <ol> <li>Clearing the Item File</li> </ol> <p>To clear all entries for service item prices, execute the command:    <code>/anhyfam item clear</code>    Successfully executing the command will delete the <code>item_prices.yml</code> file.</p> <ol> <li>Retrieving an Item by Key</li> </ol> <p>To retrieve the item corresponding to a specific key, execute the command:    <code>/anhyfam item get divorce</code>    If an item exists for the <code>divorce</code> key, it will be added to your inventory or dropped nearby if the inventory is full.</p> <ol> <li>Removing an Item by Key</li> </ol> <p>To remove the item corresponding to a specific key, execute the command:    <code>/anhyfam item remove adoption</code>    After successfully executing the command, the item will be removed from the <code>item_prices.yml</code> file.</p>"},{"location":"anhyfamily/marry/","title":"Marriage","text":"<p>The AnhyFamily plugin provides advanced functionality that allows players to get married, forming families within the Minecraft game. By default, only male and female players can marry, but this can be changed in the plugin configuration:</p> <pre><code># Allow same-sex marriages as well as for non-binary and undefined genders\nnon_binary_marriage: false\n</code></pre>"},{"location":"anhyfamily/marry/#marriage-requirements","title":"Marriage Requirements","text":"<ol> <li>Name and Surname: Both partners must have a name and surname set.</li> <li>Family Ties: The partners cannot be related (not ancestors or descendants of each other).</li> <li>Payment for the Ceremony: If specified in the configuration, a payment will be required for the marriage ceremony. Payment methods can include virtual currency, items, or cryptocurrency (the latter is not yet implemented).</li> </ol> <pre><code>prices:\n  # Virtual money, items, cryptocurrency (not yet implemented)\n  currency: VIRTUAL\n  marriage: 0\n  divorce: 0\n  adoption: 0\n</code></pre> <p>If a payment is required for the marriage ceremony, the specified amount will be deducted from each partner during the ceremony. If either partner lacks sufficient funds, the ceremony will be canceled.</p>"},{"location":"anhyfamily/marry/#types-of-marriage","title":"Types of Marriage","text":"<p>There are two types of marriage: public and private.</p>"},{"location":"anhyfamily/marry/#public-marriage","title":"Public Marriage","text":"<p>A public ceremony is conducted with the participation of a priest and can take place anywhere.</p> <ul> <li>Command for the priest: <code>/marry public &lt;PlayerName1&gt; &lt;PlayerName2&gt; [0|1|2]</code>   The last numerical argument (optional) determines the shared surname:</li> <li><code>0</code> - each partner keeps their own surname.</li> <li><code>1</code> - the second player takes the surname of the first.</li> <li><code>2</code> - the first player takes the surname of the second.</li> <li> <p>If nothing is specified, it defaults to <code>1</code>.</p> </li> <li> <p>Process:   After the command is entered by the priest, both partners receive a prompt to agree or decline. If both agree, the marriage takes place; if either declines, the ceremony is canceled.</p> </li> <li> <p>Chat Messages:   The priest's messages and the marriage vows can be seen by either everyone on the server or only those within a certain radius of the ceremony.</p> </li> </ul> <pre><code># Maximum distance from the priest to the partners. If 0, there are no limits.\nceremonyRadius: 20\n# Radius within which the marriage messages will be visible in chat. If 0, all online players will see it.\nceremonyHearingRadius: 200\n</code></pre>"},{"location":"anhyfamily/marry/#private-marriage","title":"Private Marriage","text":"<p>A private ceremony involves only the partners and takes place in a specified location.</p> <ul> <li>Location Configuration:</li> </ul> <pre><code>  privateCeremony:\n    world: \"world\"\n    x: 100\n    y: 64\n    z: -200\n</code></pre> <p>The partners must be within 10 blocks of the specified coordinates.</p> <ul> <li> <p>Command for the partners: <code>/marry private &lt;PlayerName&gt;</code>   The player specified in the command receives a prompt to confirm or decline the ceremony. If they agree, the marriage takes place; if they decline, the ceremony is canceled.</p> </li> <li> <p>Chat Messages:   Only players nearby will learn about the ceremony from the chat.</p> </li> </ul>"},{"location":"anhyfamily/marry/#after-marriage","title":"After Marriage","text":"<p>After marriage, a family object is created, which stores information about:</p> <ul> <li>The family's home location.</li> <li>The family chest.</li> <li>The list of parents and children of both partners.</li> <li>Access to the family chat, home, chest, and other rights.</li> </ul> <p>The family object exists as long as the family exists, that is, until a divorce occurs.</p>"},{"location":"anhyfamily/names/","title":"Name and Surname","text":"<p>The AnhyFamily plugin allows players to set their own name and surname, which will be used when displaying information about the player, their family, and the family tree. This data can be accessed via placeholders or the API for use in various contexts.</p>"},{"location":"anhyfamily/names/#setting-the-name-and-surname","title":"Setting the Name and Surname","text":"<ul> <li> <p>/family firstname <code>&lt;Firstname&gt;</code>   Sets the player's first name. The maximum length for a name is 12 characters. For example:   <code>/family firstname John</code></p> </li> <li> <p>/family surname <code>&lt;Surname male version[/Surname female version]&gt;</code>   Sets the player's surname. If the male and female versions of the surname differ, they are separated by a slash. For example:   <code>/family surname Smith/Smithson</code>   If the surname is the same for both genders, only one version is provided:   <code>/family surname Johnson</code>   The maximum length for a surname is 15 characters.</p> </li> </ul> <p>Once a player has set their name or surname, they cannot change it themselves. For this, players with special permissions, known as priests, are needed.</p>"},{"location":"anhyfamily/names/#administrative-commands","title":"Administrative Commands","text":"<p>Commands for forcibly setting a name and surname, available only from the console:</p> <ul> <li> <p>/anhyfam forcefirstname <code>&lt;PlayerName&gt;</code> <code>&lt;Firstname&gt;</code>   Forces the player's first name to be set.</p> </li> <li> <p>/anhyfam forcesurname <code>&lt;PlayerName&gt;</code> <code>&lt;Surname male version[/Surname female version]&gt;</code>   Forces the player's surname to be set.</p> </li> </ul>"},{"location":"anhyfamily/names/#commands-for-priests","title":"Commands for Priests","text":"<p>Players with the \"family.pastor\" permission can suggest name or surname changes to other players:</p> <ul> <li> <p>/family suggest firstname <code>&lt;PlayerName&gt;</code> <code>&lt;Firstname&gt;</code>   Suggests a name change.</p> </li> <li> <p>/family suggest surname <code>&lt;PlayerName&gt;</code> <code>&lt;Surname male version[/Surname female version]&gt;</code>   Suggests a surname change.</p> </li> </ul> <p>The player can accept the suggestion with the command: - /family suggest accept</p> <p>Or decline the suggestion with the command: - /family suggest refuse</p>"},{"location":"anhyfamily/names/#surname-restrictions","title":"Surname Restrictions","text":"<p>The plugin's configuration allows setting restrictions on the characters that can be used in surnames through regular expressions. Examples:</p> <pre><code># Only Latin letters, apostrophes, and hyphens are allowed\n# languages_limitation: \"^(?!.*[-']{2})(?!.*--)(?!.*'')[a-zA-Z'-]+$\"\n# Only Ukrainian letters, apostrophes, and hyphens are allowed\n# languages_limitation: \"^(?!.*[-']{2})(?!.*--)(?!.*'')[\u0430-\u0449\u0410-\u0429\u042c\u044c\u042e\u044e\u042f\u044f\u0407\u0457\u0406\u0456\u0404\u0454\u0490\u0491'-]+$\"\n# Only Russian letters, apostrophes, and hyphens are allowed\n# languages_limitation: \"^(?!.*[-']{2})(?!.*--)(?!.*'')[\u0430-\u044f\u0410-\u042f\u0451\u0401'-]+$\"\n# Letters from any language, apostrophes, and hyphens are allowed\nlanguages_limitation: \"^(?!.*[-']{2})(?!.*--)(?!.*'')\\\\p{L}['-]*[\\\\p{L}]+$\"\n</code></pre>"},{"location":"anhyfamily/permissions/","title":"Permissions","text":"<p>The AnhyFamily plugin provides a flexible permission system to manage access to various features and commands. Below is a description of each permission and its purpose.</p> <ul> <li> <p><code>family.admin</code>   Allows executing administrative commands, including managing family ties, forcibly changing gender, and other moderator functions.</p> </li> <li> <p><code>family.user</code>   Allows players to marry and adopt other players. This permission is required for basic social interaction within the plugin.</p> </li> <li> <p><code>family.pastor</code>   Allows priests to conduct wedding ceremonies and propose changes to players' names and surnames. This permission is necessary for performing the role of a priest on the server.</p> </li> <li> <p><code>family.tphome</code>   Allows players to use the command to teleport to the family home, bypassing all restrictions.</p> </li> <li> <p><code>family.chest.ignore.distance</code>   Allows players to open the family chest regardless of the distance to it.</p> </li> <li> <p><code>family.chest.ignore.world</code>   Allows players to open the family chest via command, bypassing world restrictions. This enables access to the chest from different game worlds.</p> </li> <li> <p><code>family.chest.click</code>   Allows players to open the family chest by clicking, even if click access is prohibited.</p> </li> <li> <p><code>family.chest.break</code>   Allows players to break the family chest.</p> </li> </ul> <p>Each of these permissions can be configured through a permission management plugin, enabling server administrators to precisely control which features are accessible to different player groups.</p>"},{"location":"anhyfamily/placeholders/","title":"Placeholders","text":"<p>The AnhyFamily plugin provides a wide range of placeholders for use in other plugins or scripts through the PlaceholderAPI plugin. This allows for the incorporation of player and family information into various game contexts, offering greater flexibility and customization options.</p>"},{"location":"anhyfamily/placeholders/#using-placeholders-with-placeholderapi","title":"Using Placeholders with PlaceholderAPI","text":"<p>To use AnhyFamily placeholders, you need to install the PlaceholderAPI plugin and add the extension <code>Expansion-anhy.jar</code>.</p>"},{"location":"anhyfamily/placeholders/#gender-related-placeholders","title":"Gender-related Placeholders","text":"<p>These placeholders are related to the player's gender:</p> <ul> <li> <p>%anhy_gender%   Returns the player's gender.</p> </li> <li> <p>%anhy_gender_key%   Returns the language file key for the player's gender.</p> </li> <li> <p>%anhy_gender_lang%   Returns the name of the player's gender in their language.</p> </li> <li> <p>%anhy_gender_hexcolor%   Returns the HEX color code associated with the player's gender.</p> </li> </ul>"},{"location":"anhyfamily/placeholders/#family-related-placeholders","title":"Family-related Placeholders","text":"<p>These placeholders are related to the player's family:</p> <ul> <li> <p>%anhy_family_firstname%   Returns the player's first name.</p> </li> <li> <p>%anhy_family_lastname%   Returns the player's surname according to their gender.</p> </li> <li> <p>%anhy_family%   Returns a serialized JSON string of the player's family object, which can be processed for user-friendly usage.</p> </li> <li> <p>%anhy_family_mother%   Returns the UUID string of the player's mother.</p> </li> <li> <p>%anhy_family_father%   Returns the UUID string of the player's father.</p> </li> <li> <p>%anhy_family_spouse%   Returns the UUID string of the player's spouse.</p> </li> <li> <p>%anhy_family_children%   Returns a comma-separated list of UUID strings of the player's children.</p> </li> <li> <p>%anhy_family_info%   Returns detailed information about the player's family in the form of language keys.</p> </li> <li> <p>%anhy_family_info_translated%   Returns detailed information about the player's family, translated into the player's language.</p> </li> <li> <p>%anhy_family_tree%   Returns a textual representation of the player's family tree in the form of language keys.</p> </li> <li> <p>%anhy_family_tree_translated%   Returns a textual representation of the player's family tree, translated into the player's language.</p> </li> </ul>"},{"location":"anhyfamily/prefix/","title":"Family Prefix","text":"<p>When a couple gets married and a family block is created, a family prefix of 6 characters is automatically generated. After this, if desired, the family prefix can be changed once to a custom variant.</p>"},{"location":"anhyfamily/prefix/#family-prefix-requirements","title":"Family Prefix Requirements","text":"<ol> <li>Characters: The prefix must consist of uppercase Latin letters.</li> <li>Length: The prefix must contain between 3 and 5 characters.</li> <li>Uniqueness: The prefix must be unique, meaning it should not be used by any other family.</li> </ol> <p>The family prefix serves as a unique identifier for the family. It is used in the family chat and can be integrated into other plugins via placeholders and API.</p>"},{"location":"anhyfamily/prefix/#changing-the-family-prefix","title":"Changing the Family Prefix","text":"<p>To change the family prefix, use the command:</p> <pre><code>/fprefix set &lt;PREFIX&gt;\n</code></pre> <p>This command can be executed by one of the couple. Afterward, the other family member will receive a request to either approve or reject the new prefix. They can agree or decline by clicking the corresponding option in the interactive message or by using the commands:</p> <ul> <li> <p>/fprefix accept   Agree to set the new prefix.</p> </li> <li> <p>/fprefix refuse   Decline to set the new prefix.</p> </li> </ul>"},{"location":"anhyfamily/prefix/#example-of-command-usage","title":"Example of Command Usage","text":"<ol> <li>One family member executes the command:    <code>/fprefix set ABC</code></li> <li>The other family member receives an interactive message with a request for approval.</li> <li>To approve or decline, they can use the commands:    <code>/fprefix accept</code>    or    <code>/fprefix refuse</code></li> </ol>"},{"location":"anhyfamily/separate/","title":"Separation of Family Ties","text":"<p>The AnhyFamily plugin provides the ability to sever family relationships between players. This process can include divorce, breaking ties with individual family members, or cutting off all ties with children or parents. No consent from other players is required.</p>"},{"location":"anhyfamily/separate/#divorce","title":"Divorce","text":"<ul> <li>/family divorce   This command divorces the spouses, destroying the family object and removing all cross-family ties with other family objects of the spouses. If a player took the other spouse's surname during marriage, it will be reverted to their previous surname.</li> </ul> <p>If the plugin configuration specifies a payment for divorce, it will be deducted from the player's account when the command is executed. If the player does not have enough funds, the divorce will not proceed.</p>"},{"location":"anhyfamily/separate/#severing-family-relationships","title":"Severing Family Relationships","text":"<ul> <li> <p>/family separate <code>&lt;PlayerName&gt;</code>   Identifies who <code>&lt;PlayerName&gt;</code> is (spouse, child, or parent). This command fully severs the relationship with the specified player, including mutual removal from each other's family objects if they exist for both players.</p> </li> <li> <p>/family separate children   Completely severs relationships with all children, including mutual removal from family objects if they exist for all involved players.</p> </li> <li> <p>/family separate parents   Completely severs relationships with all parents, including mutual removal from family objects if they exist for all involved players.</p> </li> </ul>"},{"location":"anhyfamily/separate/#forced-family-relationship-clearance","title":"Forced Family Relationship Clearance","text":"<ul> <li>/anhyfam clearfamily player   This command is available from the console or to a player with administrative rights. It fully severs and clears all family ties of the player player.</li> </ul>"},{"location":"anhyfamily/separate/#payment-for-actions","title":"Payment for Actions","text":"<p>Certain actions may incur a fee if specified in the configuration:</p> <pre><code>prices:\n  # Virtual money, items, cryptocurrency (not yet implemented)\n  currency: VIRTUAL\n  marriage: 0\n  divorce: 0\n  adoption: 0\n</code></pre>"},{"location":"anhyfamily/vault/","title":"Payment in Virtual Currency","text":"<p>The AnhyFamily plugin supports payment for events such as marriage, adoption, or divorce using virtual currency. To enable this payment method, the following option must be selected in the plugin's configuration file:</p> <pre><code>prices:\n  # VIRTUAL, ITEM, CRYPTO(not yet implemented)\n  currency: VIRTUAL\n  # Settings for virtual currency:\n  marriage: 0\n  divorce: 0\n  adoption: 0\n</code></pre> <p>If <code>currency: VIRTUAL</code> is set and the value for a specific service is non-zero, the payment for that service will be made in virtual currency, deducted from the player's virtual account. This functionality is supported by the Vault plugin.</p>"},{"location":"anhyfamily/vault/#configuring-service-costs-in-the-configuration-file","title":"Configuring Service Costs in the Configuration File","text":"<p>To modify the payment method, you need to edit the plugin's configuration file, setting the appropriate cost for each service. For example:</p> <pre><code>prices:\n  currency: VIRTUAL\n  marriage: 100\n  divorce: 50\n  adoption: 75\n</code></pre> <p>In this example, players will pay 100 units of virtual currency for marriage, 50 units for divorce, and 75 units for adoption. If the value is set to 0, the service will be provided for free.</p> <p>After making changes to the configuration file, you must reload the plugin configuration to apply the changes. This can be done using the following console command:</p> <pre><code>/afam reload\n</code></pre> <p>All service payments are processed automatically when the corresponding event commands are executed.</p>"},{"location":"anhyfamily/vault/#important-notes","title":"Important Notes","text":"<ol> <li> <p>Vault Plugin: The Vault plugin must be installed and configured correctly for the payment system to work, as it provides access to players' virtual accounts.</p> </li> <li> <p>Balance Check: Before executing a paid action, the plugin checks whether the player has sufficient funds in their virtual account. If the balance is insufficient, the action will not be performed, and the player will receive an appropriate message.</p> </li> <li> <p>Configuration Changes: After each change to the plugin's configuration file, it is recommended to verify the settings and reload the plugin to ensure all functions work correctly.</p> </li> </ol>"},{"location":"anhyfamily/vault/#sample-configuration-file","title":"Sample Configuration File","text":"<pre><code>prices:\n  currency: VIRTUAL\n  marriage: 100\n  divorce: 50\n  adoption: 75\n</code></pre>"},{"location":"anhylibapi/","title":"Plugin Documentation","text":""},{"location":"anhylibapi/#anhylibapi-for-minecraft-plugins","title":"AnhyLibAPI: For Minecraft Plugins","text":"<p>AnhyLibAPI is a library designed for integration into Minecraft plugins, developed to enhance their capabilities on servers running on Spigot, Paper, Purpur, and other Spigot forks.</p> <p>ProtocolLib plugin version 5.0.0 or higher is required for operation.</p> <p>AnhyLibAPI must be loaded on the server as a plugin. It's crucial to understand that AnhyLibAPI, in its role as a plugin, does not monitor any events, have timers, or interact with the world or players, ensuring no additional load on the server's operation and performance. The primary purpose of AnhyLibAPI is to provide its API to other plugins, serving as a robust foundation for extending their functionality. This design ensures that AnhyLibAPI enhances plugin capabilities without compromising server efficiency.</p>"},{"location":"anhylibapi/#key-features","title":"Key Features:","text":"<ul> <li>Multilingual Support: Easy integration of language packs for plugins.</li> <li>NBT Tags Handling: Advanced management of NBT tags for flexible data interaction.</li> <li>Player Persistent Data: Efficient use of persistent data for players.</li> <li>Customizing Messages: Individual customization of message delivery to players.</li> <li>Logging: Unique methods for event logging.</li> </ul>"},{"location":"anhylibapi/details/","title":"Detailed Implementation of AnhyLibAPI Features","text":""},{"location":"anhylibapi/details/#1-multilingual-support","title":"1. Multilingual Support","text":"<p>AnhyLibAPI implements a unified standard for multilingual support by checking \"Player Persistent Data\" for the player's selected language. If a selected language is not found, the player's Minecraft client language is used by default. Additionally, it supports the inclusion of a list of preferred languages, enhancing flexibility in localization.</p>"},{"location":"anhylibapi/details/#2-nbt-tags-handling","title":"2. NBT Tags Handling","text":"<p>AnhyLibAPI simplifies the addition, modification, and deletion of NBT tags in items, enabling developers to effortlessly manage key item data within the game.</p>"},{"location":"anhylibapi/details/#3-player-persistent-data","title":"3. Player Persistent Data","text":"<p>This feature allows for the storage, retrieval, and modification of players' personal data, such as settings, statuses, and achievements, providing deep personalization and preservation of individual player details.</p>"},{"location":"anhylibapi/details/#4-customizing-messages-and-logging","title":"4. Customizing Messages and Logging","text":"<p>These functionalities offer message customization and color-coded logging for various message types. They enhance communication between plugins and players and facilitate more effective tracking and analysis of events within plugins.</p>"},{"location":"anhylibapi/usage/","title":"Usage","text":"<p>JavaDoc for AnhyLibAPI are available at the following link:\u00a0AnhyLibAPI Documentation.</p>"},{"location":"anhylibapi/usage/#integration-with-gradle-and-maven","title":"Integration with Gradle and Maven:","text":""},{"location":"anhylibapi/usage/#gradle","title":"Gradle:","text":"<pre><code>dependencyResolutionManagement {\n    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n    repositories {\n        mavenCentral()\n        maven { url 'https://jitpack.io' }\n    }\n}\n</code></pre> <pre><code>dependencies {\n    implementation 'com.github.AnhyDev:AnhyLibAPI:v1.3.3'\n}\n</code></pre>"},{"location":"anhylibapi/usage/#maven","title":"Maven:","text":"<pre><code>&lt;repositories&gt;\n    &lt;repository&gt;\n        &lt;id&gt;jitpack.io&lt;/id&gt;\n        &lt;url&gt;https://jitpack.io&lt;/url&gt;\n    &lt;/repository&gt;\n&lt;/repositories&gt;\n</code></pre> <pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;com.github.AnhyDev&lt;/groupId&gt;\n    &lt;artifactId&gt;AnhyLibAPI&lt;/artifactId&gt;\n    &lt;version&gt;v1.3.3&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>"},{"location":"anhylibapi/usage/#plugin-writing-examples","title":"Plugin Writing Examples:","text":"<p>For a comprehensive, ready-to-use plugin example that implements AnhyLibAPI, visit the following link:\u00a0AnhyLibAPI Plugin Examples. This example is more than just sample code; it is a fully functional plugin featuring multilingual support, configurable settings, and player commands. Developers can use this plugin as a foundation, renaming and repackaging as needed, while also adding their own code to extend its functionality. It serves as an excellent starting point for understanding and applying AnhyLibAPI in a practical, real-world plugin project.</p>"},{"location":"anhylibapi/usage/#see-below-for-some-examples-from-this-code","title":"See below for some examples from this code:","text":"<pre><code>package ink.anh.example;\n\nimport java.io.File;\nimport java.io.IOException;\nimport org.bukkit.Bukkit;\nimport org.bukkit.configuration.file.YamlConfiguration;\nimport org.bukkit.plugin.Plugin;\n\nimport ink.anh.api.LibraryManager;\nimport ink.anh.api.lingo.Translator;\nimport ink.anh.api.lingo.lang.LanguageManager;\nimport ink.anh.api.messages.Logger;\nimport net.kyori.adventure.platform.bukkit.BukkitAudiences;\nimport net.md_5.bungee.api.ChatColor;\n\npublic class GlobalManager extends LibraryManager {\n\n    private static GlobalManager instance;\n    private ExampleLangPlugin plugin;\n\n    private LanguageManager langManager;\n    private String pluginName;\n    private String defaultLang;\n    private static BukkitAudiences bukkitAudiences;\n    private boolean debug;\n\n    private GlobalManager(ExampleLangPlugin plugin) {\n        super(plugin);\n        this.plugin = plugin;\n        this.saveDefaultConfig();\n        this.loadFields(plugin);\n    }\n\n    public static synchronized GlobalManager getManager(ExampleLangPlugin plugin) {\n        if (instance == null) {\n            instance = new GlobalManager(plugin);\n        }\n        return instance;\n    }\n\n    @Override\n    public Plugin getPlugin() {\n        return plugin;\n    }\n\n    @Override\n    public String getPluginName() {\n        return pluginName;\n    }\n\n    @Override\n    public BukkitAudiences getBukkitAudiences() {\n        return bukkitAudiences;\n    }\n\n    @Override\n    public LanguageManager getLanguageManager() {\n        return this.langManager;\n    }\n\n    @Override\n    public String getDefaultLang() {\n        return defaultLang;\n    }\n\n    @Override\n    public boolean isDebug() {\n        return debug;\n    }\n\n    private void loadFields(ExampleLangPlugin plugin) {\n        bukkitAudiences = BukkitAudiences.create(plugin);\n        defaultLang = plugin.getConfig().getString(\"language\", \"en\");\n        pluginName = ChatColor.translateAlternateColorCodes('&amp;',plugin.getConfig().getString(\"plugin_name\", \"ExampleLangPlugin\"));\n        debug = plugin.getConfig().getBoolean(\"debug\", false);\n        setLanguageManager();\n    }\n\n    private void saveDefaultConfig() {\n        File configFile = new File(plugin.getDataFolder(), \"config.yml\");\n        if (!configFile.exists()) {\n            YamlConfiguration defaultConfig = new YamlConfiguration();\n            defaultConfig.set(\"plugin_name\", \"ExampleLangPlugin\");\n            defaultConfig.set(\"language\", \"en\");\n            defaultConfig.set(\"debug\", false);\n            try {\n                defaultConfig.save(configFile);\n                Logger.warn(plugin, \"Default configuration created. \");\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n    private void setLanguageManager() {\n        if (this.langManager == null) {\n            this.langManager = LangMessage.getInstance(this);;\n        } else {\n            this.langManager.reloadLanguages();\n        }\n    }\n\n    public boolean reload() {\n        Bukkit.getScheduler().runTaskAsynchronously(plugin, () -&gt; {\n            try {\n                saveDefaultConfig();\n                plugin.reloadConfig();\n                loadFields(plugin);\n                Logger.info(plugin, Translator.translateKyeWorld(instance, \"configuration_reloaded\" , new String[] {defaultLang}));\n            } catch (Exception e) {\n                e.printStackTrace();\n                Logger.error(plugin, Translator.translateKyeWorld(instance, \"err_reloading_configuration \", new String[] {defaultLang}));\n            }\n        });\n        return true;\n    }\n}\n</code></pre> <pre><code>package ink.anh.example;\n\nimport ink.anh.api.lingo.lang.LanguageManager;\n\npublic class LangMessage extends LanguageManager {\n\n    private static LangMessage instance = null;\n    private static final Object LOCK = new Object();\n\n    private LangMessage(GlobalManager manager) {\n        super(manager, \"lang\");\n    }\n\n    public static LangMessage getInstance(GlobalManager manager) {\n        if (instance == null) {\n            synchronized (LOCK) {\n                if (instance == null) {\n                    instance = new LangMessage(manager);\n                }\n            }\n        }\n        return instance;\n    }\n}\n</code></pre>"},{"location":"anhylingo/","title":"Plugin Documentation","text":""},{"location":"anhylingo/#anhylingo-plugin-documentation","title":"AnhyLingo Plugin Documentation","text":"<p>AnhyLingo is a Minecraft server plugin that enables the creation of a multilingual interface. It allows players to receive system messages, messages from other plugins, and see item names and descriptions in their chosen language. Tested on servers with <code>Spigot</code>, <code>Paper</code>, and <code>Purpur</code> kernels version <code>1.20.2</code>. Requires the latest version of the <code>ProtocolLib</code> plugin to function.</p>"},{"location":"anhylingo/#main-features-of-the-plugin","title":"Main Features of the Plugin","text":"<ol> <li> <p>Multilingual Support</p> <ul> <li>Players can choose their preferred languages using a command.</li> <li>Automatically uses the client's Minecraft language settings if the player hasn't set their languages.</li> <li>Displays text in the game chat and action bar in multiple languages.</li> <li>Automatically translates custom items during interactions.</li> </ul> </li> <li> <p>Item Management</p> <ul> <li>Ability to create multilingual items (for players with administrative rights).</li> </ul> </li> <li> <p>Data Container Management</p> <ul> <li>View available data stored in the <code>PersistentDataContainer</code> for items.</li> <li>Set, modify, and delete data in the <code>PersistentDataContainer</code> for items.</li> </ul> </li> <li> <p>File Management</p> <ul> <li>Upload language files to the plugin's folder.</li> <li>Upload any files to allowed folders.</li> <li>Delete files from allowed folders. Unique methods for event logging.</li> </ul> </li> </ol>"},{"location":"anhylingo/api/","title":"API AnhyLingo","text":""},{"location":"anhylingo/api/#using-the-plugin-as-a-library","title":"Using the Plugin as a Library","text":"<p>AnhyLingo provides an API that allows developers of other plugins to create multilingual functionality.</p>"},{"location":"anhylingo/api/#adding-via-gradle","title":"Adding via Gradle","text":"<pre><code>dependencyResolutionManagement {\n    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n    repositories {\n        mavenCentral()\n        maven { url 'https://jitpack.io' }\n    }\n}\n\ndependencies {\n    implementation 'com.github.AnhyDev:AnhyLingo:v0.1.2'\n}\n</code></pre>"},{"location":"anhylingo/api/#adding-via-maven","title":"Adding via Maven","text":"<pre><code>&lt;repositories&gt;\n    &lt;repository&gt;\n        &lt;id&gt;jitpack.io&lt;/id&gt;\n        &lt;url&gt;https://jitpack.io&lt;/url&gt;\n    &lt;/repository&gt;\n&lt;/repositories&gt;\n\n&lt;dependency&gt;\n    &lt;groupId&gt;com.github.AnhyDev&lt;/groupId&gt;\n    &lt;artifactId&gt;AnhyLingo&lt;/artifactId&gt;\n    &lt;version&gt;v0.1.2&lt;/version&gt; \n&lt;/dependency&gt;\n</code></pre>"},{"location":"anhylingo/api/#example-usage","title":"Example Usage","text":""},{"location":"anhylingo/api/#language-management-class","title":"Language Management Class","text":"<pre><code>package myplugin.lang;\n\nimport myplugin.MyPlugin;\nimport ink.anh.lingo.api.lang.LanguageManager;\n\npublic class LangMessage extends LanguageManager {\n\n    private static LangMessage instance = null;\n    private static final Object LOCK = new Object();\n\n    private LangMessage(MyPlugin plugin) {\n        super(plugin, \"lang\"); // 'lang' is the folder name for language files\n    }\n\n    public static LangMessage getInstance(MyPlugin plugin) {\n        if (instance == null) {\n            synchronized (LOCK) {\n                if (instance == null) {\n                    instance = new LangMessage(plugin);\n                }\n            }\n        }\n        return instance;\n    }\n}\n</code></pre>"},{"location":"anhylingo/api/#initialization-in-the-main-plugin-class","title":"Initialization in the Main Plugin Class","text":"<pre><code>import myplugin.lang.LangMessage;\nimport ink.anh.lingo.api.lang.LanguageManager;\n\npublic class MyPlugin extends JavaPlugin {\n\n    private static MyPlugin instance;\n    private LanguageManager languageManager;\n\n    @Override\n    public void onEnable() {\n        instance = this;\n        languageManager = LangMessage.getInstance(this);\n    }\n\n    public static MyPlugin getInstance() {\n        return instance;\n    }\n\n    public LanguageManager getLanguageManager() {\n        return languageManager;\n    }\n}\n</code></pre>"},{"location":"anhylingo/commands/","title":"Commands","text":""},{"location":"anhylingo/commands/#commands-for-language-management","title":"Commands for Language Management","text":""},{"location":"anhylingo/commands/#commands-for-all-players","title":"Commands for All Players","text":""},{"location":"anhylingo/commands/#setting-preferred-languages","title":"Setting Preferred Languages","text":"<pre><code>/lingo set &lt;langs&gt;\n</code></pre> <p><code>&lt;langs&gt;</code> can be one or more languages, such as <code>en</code> or <code>en it es</code>. The plugin will search for translations in the specified order.</p>"},{"location":"anhylingo/commands/#resetting-the-selected-language","title":"Resetting the Selected Language","text":"<pre><code>/lingo reset\n</code></pre> <p>This command clears the selected languages list, and the plugin will retrieve the language from the Minecraft client.</p>"},{"location":"anhylingo/commands/#viewing-selected-languages","title":"Viewing Selected Languages","text":"<pre><code>/lingo get\n</code></pre> <p>Displays the selected languages for translation.</p>"},{"location":"anhylingo/commands/#commands-for-administrators","title":"Commands for Administrators","text":""},{"location":"anhylingo/commands/#reloading-the-plugin","title":"Reloading the Plugin","text":"<pre><code>/lingo reload\n</code></pre> <p>Reloads the general configurations and language files.</p>"},{"location":"anhylingo/commands/#information-on-available-item-localizations","title":"Information on Available Item Localizations","text":"<pre><code>/lingo items list &lt;lang&gt;\n</code></pre> <p>Displays a list of \"keys\" for all items that have translations in the specified language.</p>"},{"location":"anhylingo/commands/#viewing-localization-by-key","title":"Viewing Localization by Key","text":"<pre><code>/lingo items &lt;lang&gt; &lt;key&gt;\n</code></pre> <p>Shows the name and description in the specified language for the given key.</p>"},{"location":"anhylingo/configuration/","title":"Configuration","text":"<pre><code># Default language to use if translation is not found:\nlanguage: en\n\n# Plugin name to display to users in chat:\nplugin_name: AnhyLingo\n\n# Enable translation of custom items:\nitem_lingo: true\n\n# Enable translation of packets where language keys are found:\npacket_lingo: true\n\n# Allow browsing of files and folders:\nallow_browsing: true\n\n# Allow file uploads:\nallow_upload: false\n\n# Directories allowed for file uploads:\nallowed_directories:\n- Denizen/scripts\n- AnhyLingo\n\n# Allow file deletion:\nallow_removal: false\n\n# Directories allowed for file deletion:\nallowed_del_directories:\n- Denizen/scripts\n- AnhyLingo\n</code></pre>"},{"location":"anhylingo/files/","title":"File Management","text":""},{"location":"anhylingo/files/#uploading-files","title":"Uploading Files","text":""},{"location":"anhylingo/files/#uploading-an-anhylingo-yaml-file","title":"Uploading an AnhyLingo YAML File","text":"<pre><code>/lingo fl (flingo) &lt;link_to_file&gt; &lt;folder&gt; &lt;true|false&gt;\n</code></pre> <p>Uploads language files to subdirectories within the <code>AnhyLingo</code> plugin directory.</p>"},{"location":"anhylingo/files/#uploading-any-files","title":"Uploading Any Files","text":"<pre><code>/lingo fo (fother) &lt;link_to_file&gt; &lt;directory&gt; &lt;true|false&gt;\n</code></pre> <p>Uploads any files to allowed directories in the server plugins folder.</p>"},{"location":"anhylingo/files/#deleting-files","title":"Deleting Files","text":""},{"location":"anhylingo/files/#deleting-a-file","title":"Deleting a File","text":"<pre><code>/lingo fd (fdel) &lt;directory&gt; &lt;file_name&gt;\n</code></pre> <p>Deletes files from allowed directories.</p>"},{"location":"anhylingo/nbt_tags/","title":"PersistentDataContainer","text":""},{"location":"anhylingo/nbt_tags/#adding-or-modifying-data","title":"Adding or Modifying Data","text":"<pre><code>/lingo data set &lt;data_key&gt; &lt;params...&gt;\n</code></pre> <p>Sets the key <code>data_key</code> with parameters <code>params</code>, specifying the data type (e.g., <code>string:value, int:10</code>). This command stores data in the <code>PersistentDataContainer</code> for the item in the player's hand.</p>"},{"location":"anhylingo/nbt_tags/#viewing-data-list","title":"Viewing Data List","text":"<pre><code>/lingo data list\n</code></pre> <p>Displays a list of all data stored in the <code>PersistentDataContainer</code> for the item in the player's hand.</p>"},{"location":"anhylingo/nbt_tags/#viewing-specific-data-values","title":"Viewing Specific Data Values","text":"<pre><code>/lingo data info &lt;data_key&gt;\n</code></pre> <p>Shows the value of a specific key <code>data_key</code> stored in the <code>PersistentDataContainer</code> for the item in the player's hand.</p> <p>These changes ensure that data management is done using the safer and more convenient <code>PersistentDataContainer</code>, while maintaining similar functionality to the previous NBT-based system.</p>"},{"location":"anhyrepo/","title":"Plugin Documentation","text":""},{"location":"anhyrepo/#overview","title":"Overview","text":"<p>AnhyRepo is a plugin designed for creating and managing \"repositories\"\u2014personal storage spaces for commands or text messages in Minecraft. These repositories can be used to quickly insert text into the command line or chat, with the option to edit the text beforehand.</p>"},{"location":"anhyrepo/#essential-dependencies-for-anhyrepo","title":"Essential Dependencies for AnhyRepo","text":"<p>To function properly, AnhyRepo requires the AnhyLibAPI library version 1.5.2 or higher. Without AnhyLibAPI, AnhyRepo will not work.</p> <p>Additionally, AnhyRepo is compatible with AnhyLingo. However, its absence does not affect the operation of AnhyRepo. Furthermore, the AnhyRepo plugin includes its own commands for changing players' language settings, which modify the same player data as the AnhyLingo plugin, making it an alternative to AnhyLingo in this regard. There are no conflicts between the plugins.</p>"},{"location":"anhyrepo/commands/","title":"Commands","text":"<p>Full command version: <code>/anhyrepo args...</code>, aliases: <code>/repo args...</code> or the shortest version <code>/ar args...</code></p> <ul> <li><code>/ar gui [i]</code>: Opens the repository menu. If <code>[i]</code>\u2014the repository index\u2014is specified, it opens that specific repository.</li> <li><code>/ar new &lt;repo_name&gt;</code> or <code>/ar n &lt;repo_name&gt;</code>: Creates a new repository.</li> <li><code>/ar regroup &lt;repo_index&gt; &lt;new_name&gt;</code> or <code>/ar rg &lt;repo_index&gt; &lt;new_name&gt;</code>: Renames a repository.</li> <li><code>/ar add &lt;repo_index&gt; &lt;name&gt;/&lt;text&gt;</code> or <code>/ar a &lt;repo_index&gt; &lt;name&gt;/&lt;text&gt;</code>: Adds a new entry. The name and text are separated by a slash \"/\".</li> <li><code>/ar rename &lt;repo_index&gt; &lt;item_index&gt; &lt;new_name&gt;</code> or <code>/ar rn &lt;repo_index&gt; &lt;item_index&gt; &lt;new_name&gt;</code>: Renames an entry.</li> <li><code>/ar retext &lt;repo_index&gt; &lt;item_index&gt; &lt;new_text&gt;</code> or <code>/ar rt &lt;repo_index&gt; &lt;item_index&gt; &lt;new_text&gt;</code>: Changes the text in an entry.</li> <li><code>/ar reitem &lt;repo_index&gt; &lt;item_index&gt;</code> or <code>/ar ri &lt;repo_index&gt; &lt;item_index&gt;</code>: Changes the entry icon to the type of item currently held in hand.</li> <li><code>/ar remove &lt;repo_index&gt; &lt;item_index&gt;</code>: Deletes an entry.</li> </ul>"},{"location":"anhyrepo/features/","title":"Features","text":""},{"location":"anhyrepo/features/#key-features-of-the-plugin","title":"Key Features of the Plugin","text":"<ul> <li>Repository Creation: Users can create up to 9 different repositories.</li> <li>Record Management: Each repository can hold up to 27 entries.</li> <li>User Interface: Repository management is implemented through a custom inventory.</li> </ul>"},{"location":"anhyrepo/features/#usage","title":"Usage","text":"<ol> <li>Opening the Menu: Enter the command <code>/repo gui</code> to access the main repository menu, or <code>/repo gui &lt;i&gt;</code> to open a specific repository.</li> <li>Adding an Entry: Enter the command <code>/repo add &lt;repo_index&gt; &lt;name&gt;/&lt;text&gt;</code>, where <code>&lt;name&gt;</code> is the short name of the entry, and <code>&lt;text&gt;</code> is the text or command to be saved.</li> <li>Editing and Deleting: Use the commands <code>/repo rename</code>, <code>/repo retext</code>, and <code>/repo remove</code> to manage existing entries.</li> </ol>"},{"location":"anhyrepo/interface/","title":"Interface","text":""},{"location":"anhyrepo/interface/#user-interface","title":"User Interface","text":"<ul> <li>Inventory Clicks: Left-clicking an item in the inventory inserts the necessary text into the command line. Right-clicking returns to the main menu.</li> <li>Visualization: Icons for entries are distinct: a command block for commands, a sheet of paper for short messages, and a book and quill for longer texts.</li> </ul>"},{"location":"anhyrepo/use_cases/","title":"Use Cases","text":"<p>The AnhyRepo plugin can be particularly effective in various scenarios:</p> <ul> <li>For Server Administrators: It provides convenient storage and quick access to repetitive, lengthy commands necessary for server management and configuration setup.</li> <li>For Content Creators and Developers: It allows efficient storage and execution of complex commands needed for scripting, NPC management, or detailed world-building tasks.</li> <li>For Regular Players Who Play Actively: It helps store and quickly access long text messages or complex command sequences, enhancing gameplay efficiency and interaction.</li> </ul>"},{"location":"anhyshop/","title":"Plugin Documentation","text":""},{"location":"anhyshop/#anhyshop-plugin-documentation","title":"AnhyShop Plugin Documentation","text":"<p>AnhyShop is a unique plugin for creating traders and organizing trade on Minecraft servers, based on the villager trading inventory. It has been tested on Spigot, Paper, and Purpur server cores for version 1.20.4.</p>"},{"location":"anhyshop/#essential-requirements-for-anhyshop","title":"Essential Requirements for AnhyShop","text":"<p>To function, AnhyShop requires the AnhyLibAPI library version 1.5.2 or higher. This library is an integral part of the plugin, ensuring its stability and efficiency. Without AnhyLibAPI, AnhyShop will not work.</p> <p>Additionally, AnhyShop is compatible with AnhyLingo version 0.3.3 or higher, though this plugin is not mandatory. Installing AnhyLingo extends AnhyShop's multilingual capabilities by adding support for multilingual items in trades. The absence of AnhyLingo does not affect AnhyShop's core functionality.</p>"},{"location":"anhyshop/#key-features-of-the-plugin","title":"Key Features of the Plugin","text":"<ul> <li>Simplicity and Convenience: No complex configurations are required; all data is automatically saved in the built-in SQLite database (<code>shops.db</code> file in the plugin folder).</li> <li>Data Security: Information about traders is encrypted, preventing it from being viewed or edited directly in the database file.</li> <li>Flexible Usage: The ability to open trades via console commands or players with appropriate permissions allows server administrators to integrate shops with other plugins, scripts, command blocks, and more.</li> </ul> <p>AnhyShop is the ideal choice for Minecraft servers that seek simplicity in trade management without sacrificing functionality.</p>"},{"location":"anhyshop/commands/","title":"Commands","text":""},{"location":"anhyshop/commands/#administrator-commands","title":"Administrator Commands","text":""},{"location":"anhyshop/commands/#plugin-reload","title":"Plugin Reload","text":""},{"location":"anhyshop/commands/#reloading-configurations","title":"Reloading Configurations","text":"<pre><code>/shop reload\n</code></pre> <ul> <li>Reloads the language files and trader configurations from the database.</li> <li>Requires permission: <code>anhyshop.reload</code>.</li> <li>This command is also available from the console.</li> </ul>"},{"location":"anhyshop/commands/#managing-traders","title":"Managing Traders","text":""},{"location":"anhyshop/commands/#trader-information","title":"Trader Information","text":"<pre><code>/shop list\n</code></pre> <ul> <li>Displays a list of all traders with their details: <code>&lt;key&gt;</code>, <code>&lt;name&gt;</code>, and <code>&lt;number of trades&gt;</code>.</li> <li>Requires permission: <code>anhyshop.trader.view</code>.</li> <li>This command is also available from the console.</li> </ul>"},{"location":"anhyshop/commands/#creating-a-new-trader","title":"Creating a New Trader","text":"<pre><code>/shop newt &lt;name&gt;\n</code></pre> <ul> <li>Creates a new trader with the name <code>&lt;name&gt;</code>, generating a unique key for them.</li> <li>Requires permission: <code>anhyshop.trader.create</code>.</li> <li>This command is also available from the console.</li> </ul>"},{"location":"anhyshop/commands/#deleting-a-trader","title":"Deleting a Trader","text":"<pre><code>/shop delt &lt;key&gt;\n</code></pre> <ul> <li>Deletes an existing trader by their unique key <code>&lt;key&gt;</code>.</li> <li>Requires permission: <code>anhyshop.trader.delete</code>.</li> <li>This command is also available from the console.</li> </ul>"},{"location":"anhyshop/commands/#renaming-a-trader","title":"Renaming a Trader","text":"<pre><code>/shop rename &lt;key&gt; &lt;new_name&gt;\n</code></pre> <ul> <li>Finds a trader by their unique key <code>&lt;key&gt;</code> and assigns them a new name <code>&lt;new_name&gt;</code>.</li> <li>Requires permission: <code>anhyshop.trader.rename</code>.</li> <li>This command is also available from the console.</li> </ul>"},{"location":"anhyshop/commands/#opening-the-trade-inventory","title":"Opening the Trade Inventory","text":"<pre><code>/shop open &lt;key&gt; &lt;player_name&gt;\n</code></pre> <ul> <li>Opens the trade for player <code>&lt;player_name&gt;</code> with the trader <code>&lt;key&gt;</code>.</li> <li>Requires permission: <code>anhyshop.trader.open</code>.</li> <li>This command is also available from the console.</li> </ul>"},{"location":"anhyshop/commands/#trading-on-behalf-of-a-player","title":"Trading on Behalf of a Player","text":"<pre><code>/shop trade &lt;key&gt;\n</code></pre> <ul> <li>Opens a trade with the trader <code>&lt;key&gt;</code>.</li> <li>Requires permission: <code>anhyshop.trader.trade</code>.</li> </ul>"},{"location":"anhyshop/dependencies/","title":"Dependencies","text":""},{"location":"anhyshop/dependencies/#anhylibapi","title":"AnhyLibAPI","text":"<p>AnhyShop requires the installation of the AnhyLibAPI library version 1.5.2 or higher. This library ensures the plugin's stability and efficiency, providing translation for system messages and multilingual names for traders.</p>"},{"location":"anhyshop/dependencies/#anhylingo-optional","title":"AnhyLingo (Optional)","text":"<p>AnhyShop is compatible with AnhyLingo version 0.3.3 or higher. Installing AnhyLingo enhances AnhyShop's multilingual capabilities by adding support for multilingual items in trades. However, the absence of AnhyLingo does not affect the core functionality of AnhyShop.</p>"},{"location":"anhyshop/trading_operations/","title":"Trading Operations","text":""},{"location":"anhyshop/trading_operations/#adding-a-new-trade","title":"Adding a New Trade","text":"<pre><code>/shop add &lt;key&gt;\n</code></pre> <ul> <li>To add a trade, you need to place items in slots 1, 2, and 3 of your inventory, as shown in the screenshot below.</li> <li>Slots 1 and 2 represent the price of the item; one of these slots can be left empty.</li> <li>Slot 3 is the item being sold for the specified price.</li> <li><code>&lt;key&gt;</code> is the unique identifier for the trader.</li> <li>Requires the permission: <code>anhyshop.product.add</code>.</li> </ul>"},{"location":"anhyshop/trading_operations/#replacing-an-existing-trade","title":"Replacing an Existing Trade","text":"<pre><code>/shop replace &lt;key&gt;\n</code></pre> <ul> <li>To replace a trade, the placement of items in the slots is the same as when adding a new trade.</li> <li>If the item in slot 3 is found, its price will be updated to the values in slots 1 and 2.</li> <li>If the item in slot 3 is not found, it will be added as a new trade.</li> <li><code>&lt;key&gt;</code> is the unique identifier for the trader.</li> <li>Requires the permission: <code>anhyshop.product.replace</code>.</li> </ul>"},{"location":"anhyshop/trading_operations/#removing-an-existing-trade","title":"Removing an Existing Trade","text":"<pre><code>/shop remove &lt;key&gt;\n</code></pre> <ul> <li>To remove a trade, place the specified item in slot 3; slots 1 and 2 are not required.</li> <li><code>&lt;key&gt;</code> is the unique identifier for the trader.</li> <li>Requires the permission: <code>anhyshop.product.remove</code>.</li> </ul>"},{"location":"utils/utils/","title":"Text Utils","text":"<p>Open the text utilities page in a new tab</p>"}]}